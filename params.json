{"name":"CI PHPUnit Test","tagline":"An easier way to use PHPUnit with CodeIgniter 3.0.","body":"# CI PHPUnit Test for CodeIgniter 3.0\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/kenjis/ci-phpunit-test/v/stable)](https://packagist.org/packages/kenjis/ci-phpunit-test) [![Total Downloads](https://poser.pugx.org/kenjis/ci-phpunit-test/downloads)](https://packagist.org/packages/kenjis/ci-phpunit-test) [![Latest Unstable Version](https://poser.pugx.org/kenjis/ci-phpunit-test/v/unstable)](https://packagist.org/packages/kenjis/ci-phpunit-test) [![License](https://poser.pugx.org/kenjis/ci-phpunit-test/license)](https://packagist.org/packages/kenjis/ci-phpunit-test)\r\n\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/kenjis/ci-phpunit-test/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/kenjis/ci-phpunit-test/?branch=master)\r\n[![Coverage Status](https://coveralls.io/repos/kenjis/ci-phpunit-test/badge.svg?branch=master)](https://coveralls.io/r/kenjis/ci-phpunit-test?branch=master)\r\n[![Build Status](https://travis-ci.org/kenjis/ci-phpunit-test.svg?branch=master)](https://travis-ci.org/kenjis/ci-phpunit-test)\r\n\r\nAn easier way to use PHPUnit with [CodeIgniter](https://github.com/bcit-ci/CodeIgniter) 3.0.\r\n\r\n* You don't have to modify CodeIgniter core files at all.\r\n* You can write controller tests easily.\r\n* Well documented.\r\n\r\n![Screenshot: Running tests on NetBeans](http://forum.codeigniter.com/attachment.php?aid=210)\r\n\r\n## Requirements\r\n\r\n* PHP 5.4.0 or later\r\n* CodeIgniter 3.0.*\r\n* PHPUnit (version 4.7 is recommended)\r\n\r\n## Change Log\r\n\r\nSee [Change Log](https://github.com/kenjis/ci-phpunit-test/blob/master/docs/ChangeLog.md).\r\n\r\n## Folder Structure\r\n\r\n~~~\r\ncodeigniter/\r\n├── application/\r\n│   └── tests/\r\n│        ├── _ci_phpunit_test/ ... don't touch! files CI PHPUnit Test uses\r\n│        ├── Bootstrap.php     ... bootstrap file for PHPUnit\r\n│        ├── TestCase.php      ... TestCase class\r\n│        ├── controllers/      ... put your controller tests\r\n│        ├── mocks/\r\n│        │   └── libraries/    ... mock libraries\r\n│        ├── models/           ... put your model tests\r\n│        └── phpunit.xml       ... config file for PHPUnit\r\n└── vendor/\r\n~~~\r\n\r\n## Installation\r\n\r\nDownload latest `ci-phpunit-test`: https://github.com/kenjis/ci-phpunit-test/releases\r\n\r\nUnzip and copy `application/tests` folder into your `application` folder in CodeIgniter project. That's it.\r\n\r\nIf you like Composer:\r\n\r\n~~~\r\n$ cd /path/to/codeigniter/\r\n$ composer require kenjis/ci-phpunit-test --dev\r\n~~~\r\n\r\nAnd run `install.php`:\r\n\r\n~~~\r\n$ php vendor/kenjis/ci-phpunit-test/install.php\r\n~~~\r\n\r\n* Above command always overwrites exisiting files.\r\n* You must run it at CodeIgniter project root folder.\r\n\r\n## Upgrading\r\n\r\nDownload latest `ci-phpunit-test`: https://github.com/kenjis/ci-phpunit-test/releases\r\n\r\nUnzip and replace `application/tests/_ci_phpunit_test` folder.\r\n\r\nIf you like Composer:\r\n\r\n~~~\r\n$ cd /path/to/codeigniter/\r\n$ composer update kenjis/ci-phpunit-test\r\n$ php vendor/kenjis/ci-phpunit-test/update.php\r\n~~~\r\n\r\n## How to Run Tests\r\n\r\nYou have to install PHPUnit before running tests.\r\n\r\n**Note:** You must run `phpunit` command in `application/tests` folder.\r\n\r\n~~~\r\n$ cd /path/to/codeigniter/\r\n$ cd application/tests/\r\n$ phpunit\r\nPHPUnit 4.6.10 by Sebastian Bergmann and contributors.\r\n\r\nConfiguration read from /.../codeigniter/application/tests/phpunit.xml\r\n\r\n...\r\n\r\nTime: 635 ms, Memory: 4.50Mb\r\n\r\nOK (3 tests, 4 assertions)\r\n\r\nGenerating code coverage report in Clover XML format ... done\r\n\r\nGenerating code coverage report in HTML format ... done\r\n~~~\r\n\r\nTo generate coverage report, Xdebug is needed.\r\n\r\n## How to Write Tests\r\n\r\nAs an example, a test case class for Inventory_model would be as follows:\r\n\r\n~~~php\r\n<?php\r\n\r\nclass Inventory_model_test extends TestCase\r\n{\r\n    public function setUp()\r\n    {\r\n        $this->CI =& get_instance();\r\n        $this->CI->load->model('Inventory_model');\r\n        $this->obj = $this->CI->Inventory_model;\r\n    }\r\n\r\n    public function test_get_category_list()\r\n    {\r\n        $expected = [\r\n            1 => 'Book',\r\n            2 => 'CD',\r\n            3 => 'DVD',\r\n        ];\r\n        $list = $this->obj->get_category_list();\r\n        foreach ($list as $category) {\r\n            $this->assertEquals($expected[$category->id], $category->name);\r\n        }\r\n    }\r\n\r\n    public function test_get_category_name()\r\n    {\r\n        $actual = $this->obj->get_category_name(1);\r\n        $expected = 'Book';\r\n        $this->assertEquals($expected, $actual);\r\n    }\r\n}\r\n~~~\r\n\r\nAs an example, a test case class for Welcome controller would be as follows:\r\n\r\n~~~php\r\n<?php\r\n\r\nclass Welcome_test extends TestCase\r\n{\r\n    public function test_index()\r\n    {\r\n        $output = $this->request('GET', 'welcome/index');\r\n        $this->assertContains(\r\n            '<title>Welcome to CodeIgniter</title>', $output\r\n        );\r\n    }\r\n}\r\n~~~\r\n\r\nSee [How to Write Tests](https://github.com/kenjis/ci-phpunit-test/blob/master/docs/HowToWriteTests.md) for details.\r\n\r\n## Function/Class Reference\r\n\r\nSee [Function and Class Reference](https://github.com/kenjis/ci-phpunit-test/blob/master/docs/FunctionAndClassReference.md).\r\n\r\n## Related Projects for CodeIgniter 3.0\r\n\r\n* [CodeIgniter Composer Installer](https://github.com/kenjis/codeigniter-composer-installer)\r\n* [Cli for CodeIgniter 3.0](https://github.com/kenjis/codeigniter-cli)\r\n* [CodeIgniter Simple and Secure Twig](https://github.com/kenjis/codeigniter-ss-twig)\r\n* [CodeIgniter Doctrine](https://github.com/kenjis/codeigniter-doctrine)\r\n* [CodeIgniter Deployer](https://github.com/kenjis/codeigniter-deployer)\r\n* [CodeIgniter3 Filename Checker](https://github.com/kenjis/codeigniter3-filename-checker)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}